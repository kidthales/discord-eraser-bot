name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        uses: docker/bake-action@v6
        with:
          pull: true
          load: true
          workdir: docker
          files: |
            docker/compose.yaml
            docker/compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max

      - name: Start services
        run: cd docker && docker compose up --wait --no-build

      - name: Check HTTP reachability
        run: curl -v --fail-with-body http://localhost

      - name: Create test database
        run: cd docker && docker compose exec -T php bin/console -e test doctrine:database:create

      - name: Run migrations
        run: cd docker && docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction

      - name: Run PHPUnit with coverage reporting
        run: cd docker && docker compose exec -T -e XDEBUG_MODE=coverage php bin/phpunit --coverage-text --coverage-clover clover.xml --coverage-html coverage

      - name: Copy coverage report from container to runner
        if: github.ref == 'refs/heads/main'
        run: docker cp discord-eraser-bot-php-1:/app/coverage/ ./coverage && docker cp discord-eraser-bot-php-1:/app/clover.xml .

      - name: Add badge to coverage report
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        if: github.ref == 'refs/heads/main'
        with:
          coverage_badge_path: coverage/badge.svg
          push_badge: false

      - name: Run phpDocumentor and include coverage report
        if: github.ref == 'refs/heads/main'
        run: |
          docker run --rm -v $(pwd):/data phpdoc/phpdoc
          cp -r coverage .phpdoc/build

      - name: Publish documentation and coverage report
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          publish_branch: docs
          publish_dir: ./.phpdoc/build
          github_token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: docker/Dockerfile
